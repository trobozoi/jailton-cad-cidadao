# Configuration file
# key = value
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %X{requestID} %s%e%n
quarkus.banner.path=banner.txt

# Remove o path /q para os endpoints do quarkus
quarkus.http.non-application-root-path=/

# Config DocumentacaoSwagger
quarkus.swagger-ui.urls.default=/api-docs-json
quarkus.smallrye-openapi.path=/api-docs-json
quarkus.swagger-ui.path=/api-docs

# Configuracao do caminho para acessar a documentacao da aplicacao em swagger
mp.openapi.extensions.smallrye.info.title=${quarkus.application.name:${artifactId}}
mp.openapi.extensions.smallrye.info.version=${quarkus.application.version:${version}}
mp.openapi.extensions.smallrye.info.description=Desenvolva um Back-End completo para cadastro de Cidadaos com os seguintes dados: cpf, nome, endereco e sexo. Este Back-End deve possuir uma camada de persistencia de dados e uma camada de servicos. O Web Service utilizado devera ser RESTFul..
mp.openapi.extensions.smallrye.info.contact.name=Antonio Jailton Carvalho Araujo
mp.openapi.extensions.smallrye.info.contact.url=http://localhost:8080
mp.openapi.servers=http://localhost:8080

# Configuracao para ser utilizada no profile de test do quarkus
# Nesse caso ele vai usar esse banco quando for executar os testes
quarkus.datasource.jdbc.driver=org.h2.Driver
quarkus.datasource.jdbc.url=jdbc:h2:mem:cidadaos'
quarkus.datasource.username=sa
quarkus.datasource.password=sa
quarkus.datasource.db-kind=h2
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.analytics.disabled=false
